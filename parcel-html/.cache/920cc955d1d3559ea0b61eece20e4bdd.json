{"dependencies":[{"name":"./index.css","loc":{"line":2,"column":20}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require(\"./index.css\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = () => {\n  var myApp = {};\n  /**\r\n   * Model 数据处理\r\n   */\n  myApp.Model = function (val) {\n    var num = 0;\n    this.add = function (val) {\n      if (num < 100) num += val;\n    };\n    this.sub = function (val) {\n      if (num > 0) num -= val;\n    };\n    this.getVal = function () {\n      return num;\n    };\n\n    // 观察者模式 \n    var self = this,\n        views = [];\n\n    this.register = function (view) {\n      views.push(view);\n    };\n\n    this.notify = function () {\n      for (var i = 0; i < views.length; i++) {\n        views[i].render(self);\n      }\n    };\n  };\n  /**\r\n   * View视图层 数据展示\r\n   */\n  myApp.View = function (controller) {\n    const numInput = $('.numInput'),\n          addBtn = $('.addBtn'),\n          subBtn = $('.subBtn');\n    this.render = function (model) {\n      numInput.val(model.getVal());\n    };\n    addBtn.click(controller.increase);\n    subBtn.click(controller.decrease);\n  };\n\n  myApp.Controller = function () {\n    var model = null,\n        view = null;\n\n    this.init = function () {\n      /* 初始化Model和View */\n      model = new myApp.Model();\n      view = new myApp.View(this);\n\n      /* View向Model注册，当Model更新就会去通知View啦 */\n      model.register(view);\n      model.notify();\n    };\n\n    /* 让Model更新数值并通知View更新视图 */\n    this.increase = function () {\n      model.add(1);\n      model.notify();\n    };\n\n    this.decrease = function () {\n      model.sub(1);\n      model.notify();\n    };\n  };\n\n  (function () {\n    var controller = new myApp.Controller();\n    controller.init();\n  })();\n}; // 引入一个 CSS 模块"},"hash":"a56fd0b7b1b7a0b1702ef71f7006827a"}